name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    # We have defined Python 3.8 in environment.yml.
    # CI will use this file to create the environment, so Python version will be 3.8.

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Updated to v4 for latest features/fixes
    
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: 3.8 # Consistent with environment.yml
        # mamba-version: "*" # Optional: for faster env creation if needed
        # channels: conda-forge,defaults # Optional: channels are defined in environment.yml

    - name: Create Conda environment and Install Dependencies
      shell: bash -l {0} # Important for conda activate to take effect
      run: |
        echo "Creating Conda environment from environment.yml..."
        conda env create -f environment.yml
        echo "Activating Conda environment: dlc-webui-env"
        # The environment is activated in subsequent `shell: bash -l {0}` steps
        # by conda activate dlc-webui-env, or by specifying the env in the command
        echo "Verifying Conda environment..."
        conda info --envs
        echo "Listing installed packages in dlc-webui-env..."
        conda list -n dlc-webui-env

    - name: Linting and Testing
      shell: bash -l {0} # Important for conda activate to take effect
      run: |
        echo "Activating Conda environment for linting and testing..."
        conda activate dlc-webui-env # Ensure environment is activated
        echo "Installing project in editable mode..."
        pip install -e .
        
        # flake8 should be installed via environment.yml (e.g., as a dependency of black or pytest, or directly)
        # If not, it can be installed via: conda install flake8 -y
        echo "--- Linting with flake8 ---"
        # Default flake8, consider adding specific checks or configurations if needed
        flake8 .
        
        # pytest and pytest-cov should be installed via environment.yml
        echo "--- Testing with pytest ---"
        pytest --cov=./src --cov-report=xml # Assuming source code is in ./src for coverage

    # Optional: Upload test coverage report (e.g., to Codecov)
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }} # Needs to be set in GitHub secrets if used
    #     files: ./coverage.xml # Path to coverage file generated by pytest
    #     flags: unittests
    #     name: codecov-umbrella # Name for the report in Codecov UI
    #     fail_ci_if_error: true # Fail CI if Codecov upload fails 